# sudo ansible-playbook -i inventory.yml --vault-id default@/etc/ansible_pass_private deploy.yml --diff

- name: Deploy Docker Containers on the Raspberry Pi
  hosts: pi-remote
  become: true

  vars:
    variables_to_prompt:
      - docker_hub_username
      - docker_hub_password
      - client_local_port
      - api_local_port

  tasks:
    - name: Get variables from vars.yml
      include_tasks: ./get_vars.yml
      loop:
        - vars.yml
        - docker_hub_credentials.yml
      loop_control:
        loop_var: path

    - name: Loop through undefined variables and prompt the user
      include_tasks: ./prompt_undefined_vars.yml
      loop: "{{ variables_to_prompt }}"
      loop_control:
        loop_var: var_name

    - name: Login to Docker Hub
      docker_login:
        username: "{{ docker_hub_username }}"
        password: "{{ docker_hub_password }}"

    - name: Get running containers
      docker_host_info:
        containers: yes
      register: docker_containers

    - name: Remove Existing Containers
      docker_container:
        name: "{{ item.Id }}"
        state: absent
        force_kill: true
      loop: "{{ docker_containers.containers }}"
      when: item.Image is search(docker_hub_username)

    - name: Prune Docker Containers
      docker_prune:
        containers: true

    - name: Get Docker Images
      docker_host_info:
        images: true
      register: docker_images

    - name: Delete Docker Images
      docker_image:
        name: "{{ item.Id }}"
        state: absent
      loop: "{{ docker_images.images }}"
      when: item.RepoTags | select('search', docker_hub_username) | list | length > 0

    - name: Pull Docker images from Docker Hub
      docker_image:
        name: "{{ docker_hub_username }}/ledstrip-{{ item }}"
        tag: latest
        source: pull
      loop:
        - client
        - api

    - name: Create Docker network
      docker_network:
        name: ledstrip-network
        state: present

    - name: Run Client Docker container
      docker_container:
        name: api
        image: "{{ docker_hub_username }}/ledstrip-api:latest"
        state: started
        restart_policy: unless-stopped
        privileged: true
        networks:
          - name: ledstrip-network

    - name: Run API Docker container
      docker_container:
        name: client
        image: "{{ docker_hub_username }}/ledstrip-client:latest"
        state: started
        restart_policy: unless-stopped
        privileged: true
        ports:
          - "{{ client_local_port }}:{{ client_local_port }}"
        networks:
          - name: ledstrip-network
        env:
          API_URL: "http://api:{{ api_local_port }}"
