# sudo ansible-playbook -i inventory.yml --vault-id default@/etc/ansible_pass_private config.yml --diff

- name: Configure Localhost
  hosts: localhost
  become: true

  tasks:
    - name: Install required packages
      apt:
        state: present
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - git
          - gnupg
          - software-properties-common
          - python3-pip

    - name: Add Docker's official GPG key
      apt_key:
        state: present
        url: https://download.docker.com/linux/ubuntu/gpg

    - name: Add Docker repository
      apt_repository:
        state: present
        repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu bionic stable

    - name: Update apt package cache after adding Docker APT repository
      apt:
        update_cache: true
        cache_valid_time: 3600

    - name: Install Docker CE
      apt:
        state: present
        name: docker-ce

    - name: Ensure Docker service is started
      service:
        name: docker
        state: started
        enabled: true

    - name: Install Docker SDK for Python
      pip:
        state: present
        name: docker

- name: Configure pi
  hosts: pi-local
  become: true

  vars:
    variables_to_prompt:
      - frps_token
      - frps_bind_port
      - subdomain_host
      - client_local_port
      - pi_ssh_port
      - client_remote_port

  tasks:
    - name: Get variables from vars.yml
      include_tasks: ./src/get_vars.yml
      vars:
        path: vars.yml

    - name: Loop through undefined variables and prompt the user
      include_tasks: ./src/prompt_undefined_vars.yml
      loop: "{{ variables_to_prompt }}"
      loop_control:
        loop_var: var_name

    - name: Install required packages
      apt:
        state: present
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - git
          - gnupg
          - software-properties-common
          - python3-pip
          - python3-venv
          - python3-full

    - name: Ensure pip configuration directory exists
      file:
        path: ~/.config/pip
        state: directory
        mode: "0755"

    - name: Create pip.conf file
      copy:
        content: |
          [global]
          break-system-packages = true
        dest: ~/.config/pip/pip.conf
        mode: "0644"

    - name: Install Docker SDK for Python
      pip:
        state: present
        name: docker

    - name: Add Docker's official GPG key
      apt_key:
        state: present
        url: https://download.docker.com/linux/raspbian/gpg

    - name: Add Docker repository
      apt_repository:
        state: present
        repo: deb [arch=armhf] https://download.docker.com/linux/raspbian buster stable

    - name: Update apt package cache
      apt:
        update_cache: true

    - name: Install Docker
      apt:
        state: present
        name: docker-ce

    - name: Ensure Docker service is started
      service:
        name: docker
        state: started
        enabled: true

    - name: Configure frpc.ini
      blockinfile:
        path: /root/.config/frpc.ini
        create: true
        block: |
          [common]
          server_addr = {{ subdomain_host }}
          server_port = {{ frps_bind_port }}
          tls_enable = true
          token = {{ frps_token }}

          [pi4bssh]
          type = tcp
          local_ip = 127.0.0.1
          local_port = 22
          remote_port  = {{ pi_ssh_port }}

          [pi4bclient]
          type = tcp
          local_ip = 127.0.0.1
          local_port  = {{ client_local_port }}
          remote_port = {{ client_remote_port }}
          use_encryption = true
          use_compression = true

    - name: Start Frpc container
      docker_container:
        name: frpc
        image: snowdreamtech/frpc:latest
        state: started
        restart_policy: unless-stopped
        network_mode: host
        restart: true
        entrypoint: ["/usr/bin/frpc", "-c", "/etc/frpc/frpc.ini"]
        volumes:
          - "/root/.config/frpc.ini:/etc/frpc/frpc.ini:ro"

- name: Configure Server
  hosts: linode
  become: true

  vars:
    variables_to_prompt:
      - frps_token
      - frps_dashboard_password
      - frps_bind_port
      - frps_dashboard_port
      - subdomain_host
      - client_subdomain

  tasks:
    - name: Get variables from vars.yml
      include_tasks: ./src/get_vars.yml
      vars:
        path: vars.yml

    - name: Install required packages
      apt:
        state: present
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - git
          - gnupg
          - software-properties-common
          - python3-pip
          - python3-full

    - name: Configure Caddyfile
      blockinfile:
        path: /root/Caddyfile
        create: true
        marker: "# {mark} ANSIBLE MANAGED CADDY BLOCK"
        block: |
          dashboard.{{ subdomain_host }} {
            reverse_proxy localhost:{{ frps_dashboard_port }} {
              transport http {
                keepalive 60m
                keepalive_interval 10s
              }
            }
          }

          {{ client_subdomain }}.{{ subdomain_host }} {
            reverse_proxy localhost:{{ client_remote_port }} {
              transport http {
                keepalive 60m
                keepalive_interval 10s
              }
            }
          }

    - name: Configure frps.ini
      blockinfile:
        path: /root/frps.ini
        create: true
        block: |
          [common]
          bind_port = {{ frps_bind_port }}
          subdomain_host = {{ subdomain_host }}
          tls_enable = true
          token = "{{ frps_token }}"
          dashboard_port = {{ frps_dashboard_port }}
          dashboard_user = admin
          dashboard_pwd = "{{ frps_dashboard_password }}"

    - name: Add Docker's official GPG key
      apt_key:
        state: present
        url: https://download.docker.com/linux/debian/gpg

    - name: Add Docker repository
      apt_repository:
        state: present
        repo: deb [arch=amd64] https://download.docker.com/linux/debian bullseye stable

    - name: Update apt package cache
      apt:
        update_cache: true

    - name: Install Docker
      apt:
        state: present
        name: docker-ce

    - name: Ensure Docker service is started
      service:
        name: docker
        state: started
        enabled: true

    - name: Start Caddy container
      docker_container:
        name: caddy
        image: caddy:latest
        state: started
        restart_policy: always
        network_mode: host
        restart: true
        volumes:
          - "/root/Caddyfile:/etc/caddy/Caddyfile:ro"

    - name: Start frps container
      docker_container:
        name: frps
        image: snowdreamtech/frps:latest
        state: started
        network_mode: host
        restart: true
        restart_policy: always
        entrypoint: ["/usr/bin/frps", "-c", "/etc/frp/frps.ini"]
        volumes:
          - "/root/frps.ini:/etc/frp/frps.ini:ro"
