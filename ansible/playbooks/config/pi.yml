---
- name: Install required packages
  apt:
    state: present
    name:
      - apt-transport-https
      - ca-certificates
      - curl
      - git
      - gnupg
      - software-properties-common
      - python3-pip
      - python3-venv
      - python3-full

- name: Ensure pip configuration directory exists
  file:
    path: ~/.config/pip
    state: directory
    mode: "0755"

- name: Create pip.conf file
  copy:
    content: |
      [global]
      break-system-packages = true
    dest: ~/.config/pip/pip.conf
    mode: "0644"

- name: Install Docker SDK for Python
  pip:
    state: present
    name: docker

- name: Check if Docker is installed
  shell: docker --version
  register: docker_installed
  ignore_errors: yes

- name: Install Docker
  when: docker_installed.rc != 0
  shell: curl -fsSL https://get.docker.com | sh

- name: Create docker config file
  copy:
    dest: /etc/docker/daemon.json
    content: |
      {
        "log-driver": "json-file",
        "log-opts": {
          "max-size": "10m",
          "max-file": "3"
        }
      }

- name: Restart Docker
  service:
    name: docker
    state: restarted

- name: Create Portainer Volume
  docker_volume:
    name: portainer_agent_data

- name: Start Portainer Agent Container
  docker_container:
    name: portainer_edge_agent
    image: portainer/agent:2.19.4
    state: started
    restart_policy: always
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "/var/lib/docker/volumes:/var/lib/docker/volumes"
      - "/:/host"
      - "portainer_agent_data:/data"
    env:
      EDGE: "1"
      EDGE_ID: "{{ portainer_edge_id }}"
      EDGE_KEY: "{{ portainer_edge_key }}"
      EDGE_INSECURE_POLL: "1"

- name: Configure frpc.ini
  blockinfile:
    path: /root/.config/frpc.ini
    create: true
    block: |
      [common]
      server_addr = {{ frps_host }}
      server_port = {{ frps_bind_port }}
      tls_enable = true
      token = {{ frps_token }}

      [{{ ssh_alias }}]
      type = tcp
      local_ip = 127.0.0.1
      local_port = 22
      remote_port  = {{ ssh_remote_port }}

- name: Start Frpc container
  docker_container:
    name: frpc
    image: snowdreamtech/frpc:latest
    state: started
    restart_policy: unless-stopped
    network_mode: host
    restart: true
    entrypoint: ["/usr/bin/frpc", "-c", "/etc/frpc/frpc.ini"]
    volumes:
      - "/root/.config/frpc.ini:/etc/frpc/frpc.ini:ro"
