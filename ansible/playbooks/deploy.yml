# sudo ansible-playbook -i ../inventory.yml --vault-id default@/etc/ansible_pass_private deploy.yml --diff

- name: Deploy Docker Containers on the Raspberry Pi
  hosts: pi-remote
  become: true

  tasks:
    - name: Get variables from vars.yml
      include_tasks: ../src/get_vars.yml
      loop:
        - ../vars.yml
      loop_control:
        loop_var: path

    - name: Login to Docker Hub
      docker_login:
        username: "{{ docker_hub_username }}"
        password: "{{ docker_hub_password }}"

    - name: Set Tag Fact
      include_tasks: ../src/set_tag_fact.yml

    - name: Get running containers
      docker_host_info:
        containers: yes
      register: docker_containers

    - name: Stop Existing Containers
      command: docker stop {{ item.Id }}
      loop: "{{ docker_containers.containers }}"
      when: "'ledstrip-api' in item.Image"

    - name: Start API Docker container
      docker_container:
        name: "api-{{ tag }}"
        image: "{{ docker_hub_username }}/ledstrip-api:{{ tag }}"
        state: started
        restart_policy: unless-stopped
        privileged: true
        networks:
          - name: ledstrip-network
        env:
          LED_COUNT: "109"
          MQTT_HOST: "{{ mosquitto_host }}"

- name: Deploy Docker Containers on Linode
  hosts: linode
  become: true

  tasks:
    - name: Get variables from vars.yml
      include_tasks: ../src/get_vars.yml
      loop:
        - ../vars.yml
      loop_control:
        loop_var: path

    - name: Login to Docker Hub
      docker_login:
        username: "{{ docker_hub_username }}"
        password: "{{ docker_hub_password }}"

    - name: Set Tag Fact
      include_tasks: ../src/set_tag_fact.yml

    - name: Get running containers
      docker_host_info:
        containers: yes
      register: docker_containers

    - name: Stop Existing Containers
      command: docker stop {{ item.Id }}
      loop: "{{ docker_containers.containers }}"
      when: "'ledstrip-client' in item.Image"

    - name: Start Client Docker container
      docker_container:
        name: "client-{{ tag }}"
        image: "{{ docker_hub_username }}/ledstrip-client:{{ tag }}"
        state: present
        restart_policy: unless-stopped
        ports:
          - "{{ client_port }}:{{ client_port }}"
        networks:
          - name: ledstrip-network
        env:
          PORT: "{{ client_port }}"
          CLERK_SECRET_KEY: "{{ clerk_secret_key }}"
          DATABASE_URL: "postgresql://postgres:admin@postgres:5432/ledstrip"
          NEXT_PUBLIC_MQTT_HOST: "mosquitto"
